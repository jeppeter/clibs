
CURDIR=$(MAKEDIR)
TOPDIR=$(CURDIR)\..\..
DYNAMICDIR=$(TOPDIR)\dynamiclib
STATICDIR=$(TOPDIR)\staticlib

CC      = cl.exe
LD      = link.exe
AR      = lib.exe
RM      = del
PYTHON  = python.exe
GIT     = git.exe
CP      = copy /Y
GOBIN   = go.exe

!IFDEF UNICODE_MODE
!IF $(UNICODE_MODE) != 0
UNICODE_CFLAGS=-DUNICODE -D_UNICODE
!ELSE
UNICODE_CFLAGS=
!ENDIF
!ELSE
UNICODE_CFLAGS=
!ENDIF


!IFDEF MAKEVERBOSE
!IF $(MAKEVERBOSE) != 0
QUIETCMD=
NOLOGO_CFLAGS=
NOLOGO_LDFLAGS=
NOLOGO_MAKEFLAGS=
GIT_VERBOSE=
!ELSE
QUIETCMD=@
NOLOGO_CFLAGS=/nologo
NOLOGO_LDFLAGS=/nologo
NOLOGO_MAKEFLAGS=/NOLOGO
GIT_VERBOSE=--quiet
!ENDIF
!ELSE
QUIETCMD=@
NOLOGO_CFLAGS=/nologo
NOLOGO_LDFLAGS=/nologo
NOLOGO_MAKEFLAGS=/NOLOGO
GIT_VERBOSE=--quiet
!ENDIF

!IFDEF STATICLIB
!IF $(STATICLIB) != 0
STATIC_LIB_CFLAGS=-DWINLIB_STATIC_EXPORT /MT
EXTARGSLIB_VALUE=1
WINLIB_VALUE=1

INC_LDFLAGS = "$(STATICDIR)\extargslib.lib" "$(STATICDIR)\winlib.lib" "$(STATICDIR)\json.lib" "$(STATICDIR)\cryptutil.lib"

!ELSE
STATIC_LIB_CFLAGS=-DWINLIB_DLL_IMPORT /MT
EXTARGSLIB_VALUE=0
WINLIB_VALUE=0

INC_LDFLAGS = "$(DYNAMICDIR)\extargslib.lib" "$(DYNAMICDIR)\winlib.lib" "$(DYNAMICDIR)\json.lib" "$(DYNAMICDIR)\cryptutil.lib"

!ENDIF
!ELSE
STATIC_LIB_CFLAGS=-DWINLIB_DLL_IMPORT /MT
EXTARGSLIB_VALUE=0
WINLIB_VALUE=0

INC_LDFLAGS = "$(DYNAMICDIR)\extargslib.lib" "$(DYNAMICDIR)\winlib.lib" "$(DYNAMICDIR)\json.lib"  "$(DYNAMICDIR)\cryptutil.lib"
!ENDIF

INC_CFLAGS = /I"$(CURDIR)\..\proto" /I"$(CURDIR)\..\proto_win" /I"$(TOPDIR)\common\extargslib" /I"$(TOPDIR)\winlib" /I"$(TOPDIR)\common\jsonlib" /I"$(TOPDIR)\common" /I"$(TOPDIR)\common\cryptutil"
COM_CFLAGS = /Wall /wd"4710"
REL_CFLAGS = 
DBG_CFLAGS = /Zi /Od 


#INC_LDFLAGS = "$(TOPDIR)\winlib\winlib.lib" Advapi32.lib
REL_LDFLAGS = 

CFLAGS  = $(UNICODE_CFLAGS) $(NOLOGO_CFLAGS) $(STATIC_LIB_CFLAGS) $(INC_CFLAGS) $(COM_CFLAGS) $(REL_CFLAGS) $(DBG_CFLAGS)
LDFLAGS = $(NOLOGO_LDFLAGS) $(INC_LDFLAGS) $(REL_LDFLAGS)

SOURCES=main.cpp proto_win.cpp vssetup.cpp
OBJECTS=$(SOURCES:.cpp=.obj)

all:libtest.exe pipewin.exe

!IFDEF STATICLIB
!IF $(STATICLIB) != 0
libtest.exe:$(OBJECTS) $(STATICDIR)\winlib.lib $(STATICDIR)\json.lib $(STATICDIR)\extargslib.lib $(STATICDIR)\cryptutil.lib
	$(QUIETCMD) echo "call static $(OBJECTS)"
	$(QUIETCMD)$(LD) -out:$@  $(LDFLAGS)  $(OBJECTS)
	$(QUIETCMD)echo "use static lib"
!ELSE
libtest.exe:$(OBJECTS)  $(DYNAMICDIR)\winlib.dll $(DYNAMICDIR)\json.dll $(DYNAMICDIR)\extargslib.dll $(DYNAMICDIR)\cryptutil.dll
	$(QUIETCMD) echo "call dynamic $(OBJECTS)"
	$(QUIETCMD)$(LD) -out:$@ $(LDFLAGS) $(OBJECTS)
	$(QUIETCMD)echo "use dynamic lib"
!ENDIF	

!ELSE
libtest.exe:$(OBJECTS)  $(DYNAMICDIR)\winlib.dll $(DYNAMICDIR)\json.dll $(DYNAMICDIR)\extargslib.dll $(DYNAMICDIR)\cryptutil.dll
	$(QUIETCMD) echo "call dynamic $(OBJECTS)"
	$(QUIETCMD)$(LD) -out:$@ $(LDFLAGS) $(OBJECTS)
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\extargslib.dll $(CURDIR)\extargslib.dll
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\winlib.dll $(CURDIR)\winlib.dll
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\json.dll $(CURDIR)\json.dll
	$(QUIETCMD) copy /Y $(DYNAMICDIR)\cryptutil.dll $(CURDIR)\cryptutil.dll
	$(QUIETCMD)echo "use dynamic lib"
!ENDIF


.cpp.obj:
	$(QUIETCMD)$(CC) $(CFLAGS) -c -Fo$@ $<

main.cpp:args_options.cpp protectkill.cpp proctest.cpp pipecmd.cpp crypttest.cpp filetest.cpp maptest.cpp

proto_win.cpp:$(CURDIR)\..\proto_win\proto_win.cpp
	$(QUIETCMD)copy /Y $(CURDIR)\..\proto_win\proto_win.cpp proto_win.cpp
	

args_options.cpp:args_options.cpp.tmpl libtest.json $(TOPDIR)\coutput.py
	$(QUIETCMD)$(PYTHON) $(TOPDIR)\coutput.py -j $(CURDIR)\libtest.json -i $(CURDIR)\args_options.cpp.tmpl cmdstruct | \
	 $(PYTHON) $(TOPDIR)\coutput.py -j $(CURDIR)\libtest.json -i - -o $(CURDIR)\args_options.cpp freefunc



pipewin.exe : pipewin.go loglib.go loglib_windows.go
	$(QUIETCMD)$(GOBIN) build -o $@ pipewin.go loglib.go loglib_windows.go

loglib.go : $(TOPDIR)\golib
	$(QUIETCMD)$(CP) $(TOPDIR)\golib\log\loglib.go $@

loglib_windows.go: $(TOPDIR)\golib
	$(QUIETCMD)$(CP) $(TOPDIR)\golib\log\loglib_windows.go $@

$(TOPDIR)\golib:
	$(QUIETCMD)(cd $(TOPDIR) && $(GIT) clone https://github.com/jeppeter/golib.git golib && cd $(CURDIR))

$(DYNAMICDIR)\extargslib.dll:
	$(QUIETCMD)cd $(TOPDIR)\common\extargslib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"

$(DYNAMICDIR)\winlib.dll:
	$(QUIETCMD)cd $(TOPDIR)\winlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"

$(DYNAMICDIR)\json.dll:
	$(QUIETCMD)cd $(TOPDIR)\common\jsonlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"

$(DYNAMICDIR)\cryptutil.dll:
	$(QUIETCMD)cd $(TOPDIR)\common\cryptutil && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=0 /f makefile.win all && cd "$(CURDIR)"


$(STATICDIR)\extargslib.lib:
	$(QUIETCMD)cd $(TOPDIR)\common\extargslib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"

$(STATICDIR)\winlib.lib:
	$(QUIETCMD)cd $(TOPDIR)\winlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"

$(STATICDIR)\json.lib:
	$(QUIETCMD)cd $(TOPDIR)\common\jsonlib && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"

$(STATICDIR)\cryptutil.lib:
	$(QUIETCMD)cd $(TOPDIR)\common\cryptutil && $(MAKE) $(NOLOGO_MAKEFLAGS) STATICLIB=1 /f makefile.win all && cd "$(CURDIR)"


clean_winlib:
	$(QUIETCMD)cd $(TOPDIR)\winlib && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"

clean_json:clean_winlib
	$(QUIETCMD)cd $(TOPDIR)\common\jsonlib && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"

clean_extargslib: clean_json
	$(QUIETCMD)cd $(TOPDIR)\common\extargslib && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"

clean_cryptutil:
	$(QUIETCMD)cd $(TOPDIR)\common\cryptutil && $(MAKE) $(NOLOGO_MAKEFLAGS) /f makefile.win clean && cd "$(CURDIR)"	

clean:clean_extargslib clean_cryptutil
	$(QUIETCMD) $(RM) proto_win.cpp 2>NUL
	$(QUIETCMD) $(RM) *.exe *.obj 2>NUL
	$(QUIETCMD) $(RM) *.pdb *.ilk 2>NUL
	$(QUIETCMD) $(RM) *.dll 2>NUL
	$(QUIETCMD) $(RM) args_options.cpp 2>NUL
	$(QUIETCMD) $(RM) *.dll 2>NUL
	$(QUIETCMD) $(RM) pipewin.exe loglib.go loglib_windows.go 2>NUL
